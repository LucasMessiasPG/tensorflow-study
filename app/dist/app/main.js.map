{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.html","./src/app/app.module.ts","./src/app/workbranch/game.ts","./src/app/workbranch/nn.ts","./src/app/workbranch/player.ts","./src/environments/environment.ts","./src/main.ts","node-fetch (ignored)","util (ignored)","crypto (ignored)","string_decoder (ignored)","fs (ignored)","webpack:///crypto (ignored)?d32f"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, HostListener } from '@angular/core';\r\nimport Game from \"./workbranch/game\";\r\nimport Player from \"./workbranch/player\";\r\nimport _ from \"lodash\";\r\nimport * as randomLib from \"random\";\r\n\r\nconst api = \"http://localhost:8081\";\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: \"app.html\",\r\n  styleUrls: [\"app.scss\"]\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n  game: Game;\r\n  players1: Player[] = [];\r\n  bestPlayer: any;\r\n  row: number;\r\n  col: number;\r\n  player2: any;\r\n  nextObjetive: number[] = [];\r\n  playerDebug: any;\r\n  debug: boolean;\r\n  minWeigth: number = -1;\r\n  maxWeigth: number = 1;\r\n  totalPlayers: number = 100;\r\n\r\n  bluePositions: number[][] = [\r\n    [0,0],\r\n    [14,14],\r\n    [14,0],\r\n    [0,14],\r\n    [-1,-1]\r\n  ]\r\n  positionIndex = 0;\r\n  oldPositionIndex = 0;\r\n  oldPosition: any = [];\r\n\r\n  constructor(){\r\n    this.setupGame();\r\n  }\r\n\r\n  setupGame(){\r\n    if(this.game){\r\n      this.game.stop();\r\n    }\r\n    this.row = 15;\r\n    this.col = 15;\r\n    let design = [];\r\n    for(let i = 0; i < this.row; i++){\r\n      design[i] = [];\r\n      for(let j = 0; j < this.col; j++){\r\n        design[i][j] = 1; \r\n      } \r\n    }\r\n    this.game = new Game(design);\r\n  }\r\n\r\n  stopGame(){\r\n    this.game.stop();\r\n  }\r\n\r\n  startGame(){\r\n    let initialPlayer: Player = this.bestPlayer;\r\n    if(!initialPlayer){\r\n      initialPlayer = this.createPlayer(\"red\");\r\n    }\r\n    this.runGame(initialPlayer);\r\n  }\r\n\r\n  nextPositionPlayer2(){\r\n    this.positionIndex++;\r\n  }\r\n\r\n  endGame(bestOldPlayer){\r\n    this.game.stop();\r\n    let playersScore = [];\r\n\r\n    if(this.hasWinner()){\r\n      this.nextPositionPlayer2()\r\n      playersScore = this.players1.map(p => {\r\n        return {\r\n          win: true,\r\n          player: p,\r\n          score: p.winTime\r\n        }\r\n      });\r\n    } else {\r\n      playersScore = [{\r\n        player: bestOldPlayer,\r\n        score: 1\r\n      }];\r\n    }\r\n\r\n    playersScore.sort((a, b) => {\r\n      return a.score - b.score;\r\n    });\r\n\r\n    this.bestPlayer = _.first(playersScore).player.fullCopy();\r\n    this.clearListPlayer1();\r\n    this.runGame(this.bestPlayer);\r\n  }\r\n\r\n  hasWinner(){\r\n    return this.players1.some(player1 => player1.win);\r\n  }\r\n\r\n  createPlayer(color: string){\r\n    let player = new Player(color);\r\n    player.setMapSize([this.game.map.length, this.game.map[0].length]);\r\n    player.mutationRate = this.game.mutationRate\r\n    player.makeBrain();\r\n    return player;\r\n  }\r\n\r\n  createListPlayer1(playerToCopy: Player){\r\n    let listPlayers = [];\r\n    for(let i = 0; i < this.totalPlayers; i++){\r\n      listPlayers.push(this.createPlayer(playerToCopy.color));\r\n    }\r\n    playerToCopy.brain.dispose();\r\n    this.players1 = listPlayers;\r\n    return this.players1\r\n  }\r\n\r\n  clearListPlayer1(){\r\n    if(this.players1 && this.players1.length){\r\n      this.players1.forEach(player1 => player1.brain.dispose());\r\n    }\r\n    this.players1 = [];\r\n  }\r\n\r\n\r\n  hasBestPlayer(players){\r\n    return (players || []).some(player => player.oldBestPlayer);\r\n  }\r\n\r\n  setObjetive(row, col){\r\n    this.nextObjetive = [col, row];\r\n  }\r\n\r\n  debugPlayer(){\r\n    this.debug = !this.debug;\r\n  }\r\n\r\n  getRandomPosition(){\r\n    return Math.round(randomLib.uniform(0, (this.game.map.length -1))());\r\n  }\r\n\r\n  getNextPositionPlayer2(): [number, number]{\r\n    let player2Position: [number, number] = this.bluePositions[this.positionIndex < 4 ? this.positionIndex : 4] as [number, number];\r\n\r\n    // random mode\r\n    if(player2Position[0] == -1 && player2Position[1] == -1){\r\n      player2Position = null;\r\n      if(this.positionIndex != this.oldPositionIndex){\r\n        this.oldPositionIndex = this.positionIndex;\r\n        player2Position = [\r\n          this.getRandomPosition(),\r\n          this.getRandomPosition()\r\n        ];\r\n      }\r\n    }\r\n    if(!player2Position){\r\n      player2Position = this.oldPosition;\r\n    }\r\n\r\n    if(typeof this.nextObjetive[0] != \"undefined\"){\r\n      player2Position[0] = this.nextObjetive[0];\r\n    }\r\n    if(typeof this.nextObjetive[1] != \"undefined\"){\r\n      player2Position[1] = this.nextObjetive[1];\r\n    }\r\n\r\n    this.oldPosition = player2Position;\r\n    return player2Position;\r\n  }\r\n\r\n  createPlayer2(){\r\n    if(this.player2) this.player2.brain.dispose();\r\n    this.player2 = this.createPlayer(\"blue\")\r\n    return this.player2;\r\n  }\r\n\r\n  runGame(bestPlayer?: Player){\r\n    this.game.resetGame()\r\n\r\n    let player2 = this.createPlayer2();\r\n    let player2Position = this.getNextPositionPlayer2();\r\n    this.game.newPlayer(player2, player2Position);\r\n    this.game.setObjetive(player2);\r\n\r\n    if(bestPlayer.position){\r\n      this.game.setOldBestPlayerPosition(bestPlayer.position);\r\n    }\r\n    let players1 = this.createListPlayer1(bestPlayer.fullCopy());\r\n    for(let player1 of players1){\r\n      this.game.newPlayer(player1, [ 7, 7]);\r\n    }\r\n\r\n    this.game.start(() => {\r\n      // frame (1 second)\r\n      for(let player of this.players1){\r\n        if(player.win){\r\n          this.endGame(player);\r\n          break;\r\n        }\r\n        let keyPress = player.predictMovement(this.game.getAdjacentsTiles(player.position));\r\n        if(keyPress){\r\n          player.movement(keyPress);\r\n        }\r\n\r\n      }\r\n      if(this.player2.lose === false){\r\n        // let keyPress = player2.predictRunner(this.game.getAdjacents(player2.position));\r\n        // player2.movement(player2.randomMoment());\r\n      }\r\n      let bkpPlayer = this.players1[0].fullCopy();\r\n      this.players1 = this.players1.filter(player => {\r\n        return  player.lose === false\r\n      });\r\n\r\n      if(!this.players1.length){\r\n        this.players1.push(bkpPlayer);\r\n        return this.endGame(bestPlayer);\r\n      }\r\n    }, () => this.endGame(bestPlayer));\r\n  }\r\n}\r\n","<div class=\"container\" *ngIf=\"game\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-12\">\r\n      <button style=\"margin: 10px;\" class=\"btn btn-success\" (click)=\"startGame()\">Start</button>\r\n      <button style=\"margin: 10px;\" class=\"btn btn-danger\" (click)=\"stopGame()\">Stop</button>\r\n      <button style=\"margin: 10px;\" class=\"btn btn-warning\" (click)=\"setupGame()\">Reset</button>\r\n    </div>\r\n    <div class=\"col-lg-12\">\r\n      <div>\r\n        <label for=\"totalPlayers\">\r\n          Total Players\r\n          <input type=\"range\" name=\"totalPlayers\" max=\"500\" min=\"1\" [(ngModel)]=\"totalPlayers\"> {{ totalPlayers }}\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label for=\"gameSpeed\">\r\n          Game Speed\r\n          <input type=\"range\" name=\"gameSpeed\" max=\"1000\" min=\"3\" [(ngModel)]=\"game.speed\"> {{ game.speed }}\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label for=\"timeout\">\r\n          Game timeout\r\n          <input type=\"range\" name=\"timeout\" max=\"50\" min=\"10\" [(ngModel)]=\"game.timeout\"> {{ game.timeout }}\r\n        </label>\r\n      </div>\r\n    \r\n      <div class=\"form-group\">\r\n        <label for=\"MutationRate\">Mutation Rate</label>\r\n        <input class=\"form-control\" type=\"range\" name=\"mutationRate\" min=\"0\" max=\"1\" step=\"0.01\" [(ngModel)]=\"game.mutationRate\">\r\n        <span>{{ game.mutationRate }}</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-lg-12\">\r\n      <p>GEN: {{ game.round }}</p>\r\n      <p>Time: {{ game.time }}</p>\r\n    </div>\r\n    <div class=\"col-lg-12\">\r\n      <div class=\"row\" *ngFor=\"let row of game.map; let indexRow = index\">\r\n        <div class=\"column\"*ngFor=\"let tile of row; let indexCol = index\">\r\n          <div class=\"tile\" [ngClass]=\"{'oldBestplayer': tile.oldBestPlayer}\" style=\"cursor: pointer;\" (click)=\"setObjetive(indexRow, indexCol)\">\r\n            <div class=\"player\" [ngStyle]=\"{'background-color': tile.players[0].color}\" *ngIf=\"tile.players.length\" style=\"color: white; font-weight: bold; text-align: center;\"> {{ tile.players.length }} </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    BrowserModule,\r\n    CommonModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import _ from \"lodash\";\r\nimport Player from \"./player\";\r\n\r\nexport default class Game{\r\n  map: { oldBestPlayer: boolean, players: Player[]; }[][];\r\n  mapPlayers: Player[] = [];\r\n  status = \"waiting\";\r\n  end = false;\r\n  time: number = 0;\r\n  round: number = 0;\r\n  interval: any;\r\n  timeout: number = 20;\r\n  speed = 200;\r\n  objetive: Player;\r\n  mutationRate = 0.1;\r\n\r\n  constructor(private designMap: number[][]){\r\n    this.resetGame();\r\n  }\r\n\r\n  resetGame(){\r\n    this.time = 0;\r\n    this.round++;\r\n    this.mapPlayers = [];\r\n    this.map = this.designMap.map((row: number[], indexRow: number) => {\r\n      return row.map((column: number, indexColumn: number) => {\r\n        return {\r\n          players: [] as Player[],\r\n          oldBestPlayer: false\r\n        };\r\n      })\r\n    })\r\n  }\r\n\r\n  gameOver(status: string){\r\n    this.stop();\r\n    this.status = status;\r\n    this.end = true;\r\n    this.resetGame();\r\n  }\r\n\r\n  setObjetive(player: Player){\r\n    player.iAmObjetive = true;\r\n    this.mapPlayers.forEach(_player => _player.setObjetive(player.row, player.col));\r\n    this.objetive = player;\r\n  }\r\n\r\n  getAdjacentsTiles([row , col]){\r\n    let adjacent = [\r\n      _.has(this.map,`${row - 1}.${col}`, false),\r\n      _.has(this.map,`${row + 1}.${col}`, false),\r\n      _.has(this.map,`${row}.${col - 1}`, false),\r\n      _.has(this.map,`${row}.${col + 1}`, false),\r\n    ]\r\n    return adjacent.map(map => {\r\n      return map ? 1 : 0\r\n    })\r\n  }\r\n\r\n  getRowCol([ row, col ]){\r\n    if(this.positionOnMap([ row, col ]) === false){\r\n      throw new Error(`out map ${row} - ${col}`);\r\n    }\r\n    return _.get(this.map, `${row}.${col}`)\r\n  }\r\n\r\n  positionOnMap([ row, col ]){\r\n    return !!_.has(this.map, `${row}.${col}`);\r\n  }\r\n\r\n  newPlayer(player: Player, [ row, col ]){\r\n    if(this.positionOnMap([ row, col ]) === false){\r\n      throw new Error(`out map ${player.row} - ${player.col}`);\r\n    }\r\n\r\n    this.setPositionOnPlayer(player, [ row, col ]);\r\n    \r\n    if(!player.iAmObjetive && this.objetive){\r\n      player.setObjetive(this.objetive.row, this.objetive.col);\r\n    }\r\n\r\n    this.mapPlayers.push(player)\r\n\r\n    // implemente movemento for player\r\n    player.movement = (keyPress) => this.movement(player, keyPress);\r\n    this.putPlayerOnMap(player)\r\n  }\r\n\r\n  setPositionOnPlayer(player: Player, [ row, col ]){\r\n    player.position = [ row, col ];\r\n  }\r\n\r\n  hitOtherPlayer(players, player: Player){\r\n    return players.some(_player => _player.color != player.color);\r\n  }\r\n\r\n  putPlayerOnMap(player: Player){\r\n    let { players } = this.getRowCol(player.position);\r\n    \r\n    players.push(player);\r\n    _.set(this.map, `${player.row}.${player.col}`, { players });\r\n    this.checkWinLose(player);\r\n  }\r\n\r\n  checkWinLose(player: Player){\r\n    let { players } = this.getRowCol(player.position);\r\n    let hit = this.hitOtherPlayer(players, player);\r\n\r\n    if(hit){\r\n      if(player.iAmObjetive){\r\n        player.lose = true;\r\n      } else {\r\n        player.win = true;\r\n        this.objetive.lose = true;\r\n        player.winTime = this.time;\r\n      }\r\n    }\r\n  }\r\n\r\n  getAdjacentsPlayers([row, col]){\r\n    let position1 = row - 1 >= 0 ? this.getRowCol([row - 1, col]) : [];\r\n    let position2 = row + 1 <= this.map.length ? this.getRowCol([row + 1, col]) : [];\r\n    let position3 = col - 1 >= 0 ? this.getRowCol([row, col - 1]) : [];\r\n    let position4 = col + 1 <= this.map[0].length ? this.getRowCol([row, col + 1]) : [];\r\n\r\n    let adjacent = [\r\n      position1.length, // up\r\n      position2.length, // down\r\n      position3.length, // left\r\n      position4.length, // right\r\n    ]\r\n    return adjacent.map(_number => {\r\n      return typeof _number != \"undefined\" ? _number : 0;\r\n    }).map(_number => {\r\n      return _number > 0 ? 1 : 0;\r\n    })\r\n  }\r\n\r\n  setOldBestPlayerPosition([row, col]){\r\n    let tile = this.getRowCol([ row, col ]);\r\n    tile.oldBestPlayer = true;\r\n    _.set(this.map, `${row}.${col}`, tile);\r\n  }\r\n\r\n  movement(player: Player, keyPress: string){\r\n\r\n    let movement = {\r\n      \"ArrowUp\": { row: player.row - 1 },\r\n      \"ArrowDown\": { row: player.row + 1 },\r\n      \"ArrowLeft\": { col: player.col - 1 },\r\n      \"ArrowRight\": { col: player.col + 1 }\r\n    }\r\n    let { row, col } = movement[keyPress];\r\n\r\n    if(typeof row == \"undefined\") row = player.row;\r\n    if(typeof col == \"undefined\") col = player.col;\r\n    if(this.positionOnMap([row, col]) === false){\r\n      // try move out map !!!!\r\n      // lose ?\r\n      return false;\r\n    }\r\n    this.updateMapPositionPlayer(player, [ row, col ]);\r\n  }\r\n\r\n  updateMapPositionPlayer(player: Player, [ row, col ]){\r\n    let tile = this.getRowCol(player.position);\r\n    \r\n    tile.players = tile.players.filter(_player => _player != player);\r\n    _.set(this.map, `${player.row}.${player.col}`, tile);\r\n    \r\n    this.mapPlayers = this.mapPlayers.filter(_player => _player != player);\r\n\r\n    this.setPositionOnPlayer(player, [ row, col ]);\r\n    \r\n    this.mapPlayers.push(player);\r\n    this.putPlayerOnMap(player);\r\n  }\r\n\r\n  start(frameUpdate: Function, endFn: Function){\r\n    let speed = this.speed;\r\n    this.interval = setInterval(() => {\r\n      if(speed != this.speed){\r\n        clearInterval(this.interval);\r\n        return this.start(frameUpdate, endFn);\r\n      }\r\n      this.nextStep(frameUpdate, endFn);\r\n    }, speed);\r\n  }\r\n\r\n  stop(){\r\n    if(this.interval) clearInterval(this.interval);\r\n  }\r\n\r\n  nextStep(frameUpdate: Function, endFn: Function){\r\n    this.time++\r\n    frameUpdate();\r\n    if(this.time > this.timeout){\r\n      this.gameOver(\"timeout\");\r\n      return endFn();\r\n    }\r\n  }\r\n}","import * as tf from \"@tensorflow/tfjs\";\r\n// @ts-ignore\r\nwindow.tf = tf;\r\n// tf.setBackend('cpu');\r\n\r\nconst INPUTS = 4;\r\nconst NODES = 64;\r\nconst OUTPUTS = 4;\r\n\r\nexport default class NeuralNetwork{\r\n\r\n  model: tf.Sequential;\r\n  constructor(nn?: any){\r\n    if(nn){\r\n      this.model = nn;\r\n    } else {\r\n      this.model = NeuralNetwork.createModel();\r\n    }\r\n    \r\n  }\r\n\r\n  static createModel(){\r\n    const model = tf.sequential();\r\n    let inputlayer = tf.layers.dense({\r\n      inputShape: [INPUTS],\r\n      units: NODES,\r\n      activation: 'sigmoid'\r\n    });\r\n    let hiddenlayers = [];\r\n    let totalHiddenLayer = 16;\r\n    let nodes = NODES;\r\n\r\n    for(let i = 0; i < totalHiddenLayer; i++){\r\n      hiddenlayers.push(tf.layers.dense({\r\n        units: nodes,\r\n        activation: 'relu'\r\n      }));\r\n    }\r\n\r\n    let outputLayer = tf.layers.dense({\r\n      units: OUTPUTS,\r\n      activation: 'sigmoid'\r\n    });\r\n\r\n    model.add(inputlayer);\r\n    hiddenlayers.forEach(layer => model.add(layer));\r\n    model.add(outputLayer);\r\n    model.compile({ optimizer: \"adam\", loss: tf.losses.sigmoidCrossEntropy, metrics: 'accuracy' })\r\n    return model;\r\n  }\r\n\r\n  dispose() {\r\n    this.model.dispose();\r\n  }\r\n\r\n  copy() {\r\n\r\n    // @ts-ignore\r\n    return tf.tidy(() => {\r\n      const modelCopy = NeuralNetwork.createModel();\r\n      const w = this.model.getWeights();\r\n      for (let i = 0; i < w.length; i++) {\r\n        w[i] = w[i].clone();\r\n      }\r\n      modelCopy.setWeights(w);\r\n      const nn = new NeuralNetwork(modelCopy);\r\n      return nn;\r\n    });\r\n  }\r\n\r\n  mutate(func) {\r\n    tf.tidy(() => {\r\n      const w = this.model.getWeights();\r\n      for (let i = 0; i < w.length; i++) {\r\n        let shape = w[i].shape;\r\n        let arr = w[i].dataSync().slice();\r\n        for (let j = 0; j < arr.length; j++) {\r\n          arr[j] = func(arr[j]);\r\n        }\r\n        let newW = tf.tensor(arr, shape);\r\n        w[i] = newW;\r\n      }\r\n      this.model.setWeights(w);\r\n    });\r\n  }\r\n\r\n  predict(input_array) {\r\n    // console.log(input_array);\r\n    return tf.tidy(() => {\r\n      let xs = tf.tensor([input_array]);\r\n      let ys = this.model.predict(xs);\r\n\r\n      // @ts-ignore\r\n      let y_values = ys.dataSync();\r\n      return y_values;\r\n    });\r\n  }\r\n}\r\n","import NeuralNetwork from \"./nn\";\r\nimport { v1 as uuidV1 } from \"uuid\";\r\nimport { random } from \"mathjs\";\r\nimport _ from \"lodash\";\r\nimport * as randomLib from \"random\";\r\nimport math from \"mathjs\";\r\n\r\n\r\n\r\n\r\nfunction randomG(v){ \r\n  var r = 0;\r\n  for(var i = v; i > 0; i --){\r\n      r += Math.random();\r\n  }\r\n  return r / v;\r\n}\r\n\r\nfunction constrain(n, low, high) {\r\n  return Math.max(Math.min(n, high), low);\r\n};\r\n\r\n\r\n/*\r\n  https://p5js.org/reference/#/p5/map\r\n*/\r\nfunction map(n: any, start1: any, stop1: any, start2: any, stop2: any, withinBounds?: any) {\r\n  var newval = (n - start1) / (stop1 - start1) * (stop2 - start2) + start2;\r\n  if (!withinBounds) {\r\n    return newval;\r\n  }\r\n  if (start2 < stop2) {\r\n    return constrain(newval, start2, stop2);\r\n  } else {\r\n    return constrain(newval, stop2, start2);\r\n  }\r\n};\r\n\r\nexport default class Player{\r\n  \r\n  position: [number, number];\r\n  color: string\r\n  brain: NeuralNetwork;\r\n  mapSize: [number, number];\r\n  id = uuidV1()\r\n  objetive: number[];\r\n  lastBestScore: number = 1000;\r\n  lose: boolean = false;\r\n  win: boolean = false;\r\n  winTime: number;\r\n  iAmObjetive: boolean = false;\r\n  mutationRate: number = 0.1\r\n  debug: any = false;  \r\n  maxWeigth = 1;\r\n  minWeigth = -1;\r\n  oldBestPlayer = false;\r\n\r\n  constructor(color: string){\r\n    this.color = color;\r\n  }\r\n\r\n  setMapSize(mapSize: [number, number]){\r\n    this.mapSize = mapSize;\r\n  }\r\n\r\n  get row(){\r\n    return this.position[0];\r\n  }\r\n  \r\n  set row(value){\r\n    this.position[0] = value;\r\n  }\r\n\r\n  get col(){\r\n    return this.position[1];\r\n  }\r\n  \r\n  set col(value){\r\n    this.position[1] = value;\r\n  }\r\n\r\n  makeBrain(brain?: NeuralNetwork, opt?: any){\r\n    let { ignoreMutation = false } = opt || {};\r\n    if(brain){\r\n      // @ts-ignore\r\n      this.brain = brain.copy();\r\n      if(!ignoreMutation){\r\n        this.mutation();\r\n      }\r\n    } else {\r\n      this.brain = new NeuralNetwork();\r\n    }\r\n  }\r\n\r\n  setObjetive(row:number, col:number){\r\n    this.objetive = [row, col];\r\n  }\r\n\r\n  movement(keyPress: string){\r\n    throw new Error(\"not implemented\");\r\n  }\r\n  \r\n  setMutation(mutation: number){\r\n    this.mutationRate = mutation;\r\n  }\r\n\r\n  mutation(){\r\n    this.brain.mutate((value: any) => {\r\n      if(this.mutationRate != 0 && random(0, 1) <= this.mutationRate){\r\n        let _value =  value + randomLib.uniform(this.minWeigth, this.maxWeigth)();\r\n        return _value;\r\n      } else {\r\n        return value;\r\n      }\r\n    });\r\n    if(this.debug) this.debug = false;\r\n  }\r\n\r\n  fullCopy(){\r\n    return this.copy({ ignoreMutation: true });\r\n  }\r\n\r\n  copy(opt?: any): Player{\r\n    let {  mutationRate, debug, minWeigth, maxWeigth, ignoreMutation } = opt || {};\r\n    let player = new Player(this.color);\r\n    player.setMapSize(this.mapSize);\r\n    player.mutationRate = mutationRate;\r\n    player.debug = debug;\r\n    \r\n    if(typeof minWeigth != \"undefined\"){\r\n      player.minWeigth = minWeigth;\r\n    }\r\n\r\n    if(typeof maxWeigth != \"undefined\"){\r\n      player.maxWeigth = maxWeigth;\r\n    }\r\n    player.makeBrain(this.brain, { ignoreMutation });\r\n    return player\r\n  }\r\n\r\n  randomMovement(){\r\n    let movement = [\r\n      \"ArrowUp\",\r\n      \"ArrowDown\",\r\n      \"ArrowLeft\",\r\n      \"ArrowRight\"\r\n    ]\r\n    return movement[Math.round(Math.random() * 3)];\r\n  }\r\n\r\n  predictMovement(adjacent){\r\n    let inputs = [];\r\n\r\n    let [ y, x ] = this.position;\r\n    let [ y2, x2 ] = this.objetive;\r\n    let diffx = Math.pow((x - x2),2);\r\n    let diffy = Math.pow((y - y2), 2);\r\n    let score = diffx + diffy;\r\n\r\n    if(this.lastBestScore > score){\r\n      this.lastBestScore = score;\r\n    }\r\n\r\n    const maxDistance = Math.sqrt(Math.pow(15,2) + Math.pow(15,2));\r\n    inputs[0] = map(x, 0, this.mapSize[0], 0 ,1);\r\n    inputs[1] = map(y, 0, this.mapSize[0], 0 ,1);\r\n    inputs[2] = map(x2, 0, this.mapSize[0], 0 ,1);\r\n    inputs[3] = map(y2, 0, this.mapSize[1], 0 ,1);\r\n    // inputs[4] = adjacent[0]; // 0 || 1\r\n    // inputs[5] = adjacent[1]; // 0 || 1\r\n    // inputs[6] = adjacent[2]; // 0 || 1\r\n    // inputs[7] = adjacent[3]; // 0 || 1\r\n    // inputs[4] = map(Math.sqrt(diffx + diffy), 0, maxDistance, 0, 1);\r\n    // inputs[5] = map(Math.abs(x - x2), 0, this.mapSize[0], 0, 1);\r\n    // inputs[6] = map(Math.abs(y - y2), 0, this.mapSize[1], 0, 1);\r\n\r\n\r\n    let action = this.brain.predict(inputs);\r\n    console.log(\"action = \" + action)\r\n\r\n    let max = -Infinity;\r\n    action.forEach(moveValue => {\r\n      if(moveValue > max){\r\n        max = moveValue;\r\n      }\r\n    })\r\n\r\n    let movement = [\r\n      \"ArrowUp\",\r\n      \"ArrowDown\",\r\n      \"ArrowLeft\",\r\n      \"ArrowRight\"\r\n    ]\r\n\r\n    let indexArr = action.indexOf(max);\r\n    if(indexArr == 4){\r\n      return \"\";\r\n    }\r\n    return movement[indexArr];\r\n  }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}